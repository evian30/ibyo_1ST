<project name="SigngateFramework" default="process_build" basedir="." >
	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpath="/usr/local/apache-ant-1.7.1/lib/svnant.jar" />
        <property file="Bass-build.properties"/>

        <property name="TOMCAT.COMMON.LIB.DIR" value="${TOMCAT.HOME.DIR}/common/lib"/>

        <property name="TOMCAT.WEBROOT.DIR" value="${TOMCAT.HOME.DIR}/webapps/ROOT"/>
        <property name="TOMCAT.WEBROOT.CLASS.DIR" value="${TOMCAT.WEBROOT.DIR}/WEB-INF/classes"/>

        <property name="CHECKOUT.HOME.DIR" value="${PROJECT.DIR}"/>
	    <property name="PROJECT.HOME.DIR" value="${PROJECT.DIR}/trunk"/>
        <property name="SRC.HOME.DIR" value="${PROJECT.HOME.DIR}/WebRoot"/>
        <property name="SRC.JAVA.DIR" value="${SRC.HOME.DIR}/WEB-INF/src"/>
        <property name="SRC.PROPERTIES.DIR" value="${PROJECT.HOME.DIR}${PROPERTIES.DIR}"/>
        <property name="SRC.SH.DIR" value="${SRC.HOME.DIR}/sh"/>
        <property name="SRC.LIB.DIR" value="${TOMCAT.WEBROOT.DIR}/WEB-INF/lib"/>

        <target name="process_build" depends="compile_webRoot_svn">
<!--
                <copy todir=".">
                        <fileset dir="${SRC.SH.DIR}">
                                <include name="**/*.*"/>
                        </fileset>
                </copy>
-->
                <chmod perm="755">
                        <fileset dir=".">
                                <include name="*.sh"/>
                        </fileset>
                </chmod>

                <echo message="***************************************************"/>
                <echo message="*          source code deployed !                 *"/>
                <echo message="***************************************************"/>
                <exec executable="./tomcat-stop.sh"/>
                <echo message="***************************************************"/>
                <echo message="*          server stop !                          *"/>
                <echo message="***************************************************"/>
                <exec executable="./antpscheck.sh"/>
                <echo message="***************************************************"/>
                <echo message="*          server stop OK !                       *"/>
                <echo message="***************************************************"/>
                <exec executable="./tomcat-start.sh"/>
                <echo message="***************************************************"/>
                <echo message="*          server start !                         *"/>
                <echo message="***************************************************"/>
        </target>

        <target name="compile_webRoot_cvs" depends="sync_project_cvs">
                <copy todir="${TOMCAT.WEBROOT.DIR}">
                        <fileset dir="${SRC.HOME.DIR}">
                                <include name="**/*.jsp"/>
                                <include name="**/*.html"/>
                                <include name="**/*.js"/>
                                <include name="**/*.css"/>
                                <include name="**/*.jar"/>
                                <include name="**/*.xml"/>
                                <include name="**/*.gif"/>
                                <include name="**/*.GIF"/>
                                <include name="**/*.jpg"/>
                                <include name="**/*.tld"/>
                                <exclude name="*config*/**"/>
                                <exclude name="META-INF/**"/>
                                <exclude name="document/**"/>
                                <exclude name="WEB-INF/sh/**"/>
                                <exclude name="**/src/**/*.xml"/>
                        </fileset>
                </copy>

                <copy todir="${TOMCAT.WEBROOT.CLASS.DIR}">
                        <fileset dir="${SRC.PROPERTIES.DIR}">
                                <include name="**/*.*"/>
                        </fileset>
                </copy>

                <javac srcdir="${SRC.JAVA.DIR}" destdir="${TOMCAT.WEBROOT.CLASS.DIR}" encoding="utf-8" >
                        <classpath>

                                <fileset dir="${SRC.LIB.DIR}">
                                        <include name="*.jar" />
                                </fileset>

                                <fileset dir="${TOMCAT.COMMON.LIB.DIR}">
                                        <include name="*.jar" />
                                </fileset>

                                <pathelement location="${TOMCAT.WEBROOT.CLASS.DIR}" />
                        </classpath>
                </javac>

                <copy todir="${TOMCAT.WEBROOT.CLASS.DIR}">
                        <fileset dir="${SRC.JAVA.DIR}">
                                <include name="**/*.xml"/>
                        </fileset>
                </copy>
        </target>
	
	    <target name="compile_webRoot_svn" depends="sync_project_svn">
	                <copy todir="${TOMCAT.WEBROOT.DIR}">
	                        <fileset dir="${SRC.HOME.DIR}">
	                                <include name="**/*.jsp"/>
	                                <include name="**/*.html"/>
	                                <include name="**/*.js"/>
	                                <include name="**/*.css"/>
	                                <include name="**/*.jar"/>
	                                <include name="**/*.xml"/>
	                                <include name="**/*.gif"/>
	                                <include name="**/*.GIF"/>
	                                <include name="**/*.jpg"/>
	                                <include name="**/*.tld"/>
	                                <exclude name="*config*/**"/>
	                                <exclude name="META-INF/**"/>
	                                <exclude name="document/**"/>
	                                <exclude name="WEB-INF/sh/**"/>
	                                <exclude name="**/src/**/*.xml"/>
	                        </fileset>
	                </copy>

	                <copy todir="${TOMCAT.WEBROOT.CLASS.DIR}">
	                        <fileset dir="${SRC.PROPERTIES.DIR}">
	                                <include name="**/*.*"/>
	                        </fileset>
	                </copy>

	                <javac srcdir="${SRC.JAVA.DIR}" destdir="${TOMCAT.WEBROOT.CLASS.DIR}" encoding="utf-8" >
	                        <classpath>

	                                <fileset dir="${SRC.LIB.DIR}">
	                                        <include name="*.jar" />
	                                </fileset>

	                                <fileset dir="${TOMCAT.COMMON.LIB.DIR}">
	                                        <include name="*.jar" />
	                                </fileset>

	                                <pathelement location="${TOMCAT.WEBROOT.CLASS.DIR}" />
	                        </classpath>
	                </javac>

	                <copy todir="${TOMCAT.WEBROOT.CLASS.DIR}">
	                        <fileset dir="${SRC.JAVA.DIR}">
	                                <include name="**/*.xml"/>
	                        </fileset>
	                </copy>
	        </target>
      
	
	    <target name="sync_project_cvs" depends="makeDir">
                <cvs cvsRoot="${CVS.CVSROOT}"
                        cvsRsh="ssh"
                        command="checkout"
                        dest="${CHECKOUT.HOME.DIR}"
                        package="${CVS.PACKAGE}"
                        failonerror="true">
                </cvs>        
        </target>
	
	 
	   <target name="sync_project_svn" depends="svn_checkout,svn_update">
	   
	 
	  </target>
	 <!-- 사용시 부르는 target으로, svn 관련 작업을 수행한다. 
	        만약 이미 checkout 했다면 update 를, 그렇지 않다면 checkout 한다.  -->
	 

	 <!-- checkout 폴더 존재여부를 확인하여 update할지, checkout 할지 판단한다 -->
	 <target name="check_export_empty">
	    <available file="${CHECKOUT.HOME.DIR}" property="svn_export.exists"/>
	 </target>

	 <!-- 만약 checkout 폴더가 없다면, checkout한다 revision="${SVN.REVISION}" -->
	 <target name="svn_checkout" depends="check_export_empty" unless="svn_export.exists">
	       <svn username="${SVN.USER}" password="${SVN.PASSWD}">
	            <checkout url="${SVN.URL}"  destPath="${CHECKOUT.HOME.DIR}" />
	       </svn>    
	 </target>

	 <!-- 만약 checkout 폴더가 있다면, update한다 -->
	 <target name="svn_update" depends="check_export_empty" if="svn_export.exists">
	       <svn username="${SVN.USER}" password="${SVN.PASSWD}">
	            <update dir="${CHECKOUT.HOME.DIR}" />
	       </svn>    
	 </target>


        <target name="makeDir">
                <delete dir="${TOMCAT.WEBROOT.DIR}"/>
                <delete dir="${SRC.HOME.DIR}"/>

                <mkdir dir="${TOMCAT.WEBROOT.DIR}"/>
                <mkdir dir="${TOMCAT.WEBROOT.CLASS.DIR}"/>
        </target>

        <target name="compile_webRoot_source" depends="makeDir_source">
                <copy todir="${TOMCAT.WEBROOT.DIR}">
                        <fileset dir="${SRC.HOME.DIR}">
                                <include name="**/*.jsp"/>
                                <include name="**/*.html"/>
                                <include name="**/*.js"/>
                                <include name="**/*.css"/>
                                <include name="**/*.jar"/>
                                <include name="**/*.xml"/>
                                <include name="**/*.gif"/>
                                <include name="**/*.jpg"/>
                                <include name="**/*.tld"/>
                                <exclude name="*config*/**"/>
                                <exclude name="META-INF/**"/>
                                <exclude name="document/**"/>
                                <exclude name="WEB-INF/sh/**"/>
                                <exclude name="**/src/**/*.xml"/>
                        </fileset>
                </copy>

                <copy todir="${TOMCAT.WEBROOT.CLASS.DIR}">
                        <fileset dir="${SRC.PROPERTIES.DIR}">
                                <include name="**/*.*"/>
                        </fileset>
                </copy>

                <javac srcdir="${WEBROOT_SRC_DIR}" destdir="${TOMCAT.WEBROOT.CLASS.DIR}" encoding="utf-8">
                        <classpath>

                                <fileset dir="${WEBROOT_LIB_DIR}">
                                        <include name="*.jar" />
                                </fileset>

                                <fileset dir="${TOMCAT.COMMON.LIB.DIR}">
                                        <include name="*.jar" />
                                </fileset>

                                <pathelement location="${TOMCAT.WEBROOT.CLASS.DIR}" />
                        </classpath>
                </javac>

                <copy todir="${TOMCAT.WEBROOT.CLASS.DIR}">
                        <fileset dir="${WEBROOT_SRC_DIR}">
                                <include name="**/*.xml"/>
                        </fileset>
                </copy>
        </target>

        <target name="makeDir_source">
                <delete dir="${TOMCAT.WEBROOT.DIR}"/>

                <mkdir dir="${TOMCAT.WEBROOT.DIR}"/>
                <mkdir dir="${TOMCAT.WEBROOT.CLASS.DIR}"/>
        </target>

</project>